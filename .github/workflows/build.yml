name: Build client
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build_client:
    env:
      VITE_API_URL: ${{ secrets.VITE_API_URL }}
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}
      VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: |
            client/node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: client/package-lock.json
      - name: Install dependencies
        run: npm install --force
        working-directory: client
      - name: Lint
        run: npm run lint
        working-directory: client
      - name: Test
        run: npm test
        working-directory: client
      - name: Build
        run: npm run build
        working-directory: client

  build_server:
    env:
      SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
      dbname: ${{ secrets.DB_NAME }}
      user: ${{ secrets.DB_USER }}
      password: ${{ secrets.DB_PASSWORD }}
      host: ${{ secrets.DB_HOST }}
      port: 6543

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: server/requirements*.txt
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      - name: Test
        run: python -m unittest discover -p '*_test.py'
